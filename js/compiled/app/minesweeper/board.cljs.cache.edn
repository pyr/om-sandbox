;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name minesweeper.board, :imports nil, :requires {game minesweeper.game, minesweeper.game minesweeper.game, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :uses nil, :defs {t6640 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6640, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 8, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6647 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([row cells owner meta6648])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6647, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([row cells owner meta6648]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 21, :max-fixed-arity 4, :fn-var true, :arglists (quote ([row cells owner meta6648])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, cell {:protocol-inline nil, :meta {:file "/home/pyr/minesweeper/src/minesweeper/board.cljs", :line 6, :column 7, :end-line 6, :end-column 11, :arglists (quote ([{:keys [class type index]} owner]))}, :name minesweeper.board/cell, :variadic false, :file "src/minesweeper/board.cljs", :end-column 11, :method-params ([p__6638 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [class type index]} owner]))}, t6662 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6662, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 32, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6659 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6659, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 32, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, board {:protocol-inline nil, :meta {:file "/home/pyr/minesweeper/src/minesweeper/board.cljs", :line 24, :column 7, :end-line 24, :end-column 12, :arglists (quote ([app owner]))}, :name minesweeper.board/board, :variadic false, :file "src/minesweeper/board.cljs", :end-column 12, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner]))}, row {:protocol-inline nil, :meta {:file "/home/pyr/minesweeper/src/minesweeper/board.cljs", :line 19, :column 7, :end-line 19, :end-column 10, :arglists (quote ([cells owner]))}, :name minesweeper.board/row, :variadic false, :file "src/minesweeper/board.cljs", :end-column 10, :method-params ([cells owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cells owner]))}, ->t6656 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([board app owner meta6657])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6656, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([board app owner meta6657]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 26, :max-fixed-arity 4, :fn-var true, :arglists (quote ([board app owner meta6657])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6647 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6647, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 21, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6656 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6656, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 26, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6653 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([board app owner meta6654])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6653, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([board app owner meta6654]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 26, :max-fixed-arity 4, :fn-var true, :arglists (quote ([board app owner meta6654])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6644 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cell p__6638 owner map__6643 class type index meta6645])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6644, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([cell p__6638 owner map__6643 class type index meta6645]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 8, :max-fixed-arity 8, :fn-var true, :arglists (quote ([cell p__6638 owner map__6643 class type index meta6645])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6659 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([root app owner meta6660])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6659, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([root app owner meta6660]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 32, :max-fixed-arity 4, :fn-var true, :arglists (quote ([root app owner meta6660])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6662 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([root app owner meta6663])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6662, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([root app owner meta6663]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 32, :max-fixed-arity 4, :fn-var true, :arglists (quote ([root app owner meta6663])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6644 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6644, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 8, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6653 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6653, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 26, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, root {:protocol-inline nil, :meta {:file "/home/pyr/minesweeper/src/minesweeper/board.cljs", :line 30, :column 7, :end-line 30, :end-column 11, :arglists (quote ([app owner]))}, :name minesweeper.board/root, :variadic false, :file "src/minesweeper/board.cljs", :end-column 11, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner]))}, ->t6650 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([row cells owner meta6651])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6650, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([row cells owner meta6651]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 21, :max-fixed-arity 4, :fn-var true, :arglists (quote ([row cells owner meta6651])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6650 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/t6650, :file "src/minesweeper/board.cljs", :type true, :anonymous true, :column 3, :line 21, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6640 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cell p__6638 owner map__6639 class type index meta6641])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name minesweeper.board/->t6640, :variadic false, :file "src/minesweeper/board.cljs", :method-params ([cell p__6638 owner map__6639 class type index meta6641]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 8, :max-fixed-arity 8, :fn-var true, :arglists (quote ([cell p__6638 owner map__6639 class type index meta6641])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:index :marked :type :neighbor :class :failed? :bomb}, :order [:class :type :index :marked :bomb :neighbor :failed?]}, :doc nil}